{
  "name": "promise_mtd",
  "version": "2.0.6",
  "description": "Set of methods allowing simplify work with Promises in cycle. Methods: forEach, map, while, transform, parallel",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "types": "./index.d.ts",
  "keywords": [
    "promise",
    "promises",
    "performance",
    "async",
    "await",
    "deferred",
    "deferreds",
    "future",
    "flow control",
    "fluent interface",
    "promise methods",
    "foreach",
    "map",
    "while",
    "transform",
    "resolved",
    "wait",
    "collection",
    "iterable",
    "iterator",
    "race",
    "fulfilled",
    "concurrently",
    "concurrency",
    "parallel",
    "bluebird",
    "all",
    "function",
    "func",
    "fn",
    "limited",
    "limit",
    "control",
    "rate",
    "catch",
    "if",
    "conditional",
    "cond",
    "iff",
    "chain",
    "throw",
    "error",
    "reject",
    "rejected",
    "handler",
    "filter",
    "filtered",
    "predicate",
    "exception",
    "thunk",
    "combinator",
    "promise all"
  ],
  "author": "dm-kamaev@rambler.ru",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/dm-kamaev/promise_mtd.git"
  }
}
